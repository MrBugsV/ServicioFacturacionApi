#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServicioFacturacionApi
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FacturacionBryan")]
	public partial class FacturasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertFacturaDetalle(FacturaDetalle instance);
    partial void UpdateFacturaDetalle(FacturaDetalle instance);
    partial void DeleteFacturaDetalle(FacturaDetalle instance);
    partial void InsertProducto(Producto instance);
    partial void UpdateProducto(Producto instance);
    partial void DeleteProducto(Producto instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertEmpleado(Empleado instance);
    partial void UpdateEmpleado(Empleado instance);
    partial void DeleteEmpleado(Empleado instance);
    partial void InsertFacturaCabecera(FacturaCabecera instance);
    partial void UpdateFacturaCabecera(FacturaCabecera instance);
    partial void DeleteFacturaCabecera(FacturaCabecera instance);
    partial void InsertLoginEmpleado(LoginEmpleado instance);
    partial void UpdateLoginEmpleado(LoginEmpleado instance);
    partial void DeleteLoginEmpleado(LoginEmpleado instance);
    partial void InsertLoginCliente(LoginCliente instance);
    partial void UpdateLoginCliente(LoginCliente instance);
    partial void DeleteLoginCliente(LoginCliente instance);
    #endregion
		
		public FacturasDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FacturacionBryanConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FacturasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FacturasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FacturasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FacturasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Categoria> Categoria
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<FacturaDetalle> FacturaDetalle
		{
			get
			{
				return this.GetTable<FacturaDetalle>();
			}
		}
		
		public System.Data.Linq.Table<Producto> Producto
		{
			get
			{
				return this.GetTable<Producto>();
			}
		}
		
		public System.Data.Linq.Table<vProductos> vProductos
		{
			get
			{
				return this.GetTable<vProductos>();
			}
		}
		
		public System.Data.Linq.Table<vFacturasDetalle> vFacturasDetalle
		{
			get
			{
				return this.GetTable<vFacturasDetalle>();
			}
		}
		
		public System.Data.Linq.Table<vFacturasCabecera> vFacturasCabecera
		{
			get
			{
				return this.GetTable<vFacturasCabecera>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<Empleado> Empleado
		{
			get
			{
				return this.GetTable<Empleado>();
			}
		}
		
		public System.Data.Linq.Table<FacturaCabecera> FacturaCabecera
		{
			get
			{
				return this.GetTable<FacturaCabecera>();
			}
		}
		
		public System.Data.Linq.Table<LoginEmpleado> LoginEmpleado
		{
			get
			{
				return this.GetTable<LoginEmpleado>();
			}
		}
		
		public System.Data.Linq.Table<LoginCliente> LoginCliente
		{
			get
			{
				return this.GetTable<LoginCliente>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private EntitySet<Producto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Categoria()
		{
			this._Producto = new EntitySet<Producto>(new Action<Producto>(this.attach_Producto), new Action<Producto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Producto", Storage="_Producto", ThisKey="Id", OtherKey="Categoria_Id")]
		public EntitySet<Producto> Producto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Producto(Producto entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacturaDetalle")]
	public partial class FacturaDetalle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _Cantidad;
		
		private System.Nullable<decimal> _Subtotal;
		
		private System.Nullable<int> _Factura_Id;
		
		private System.Nullable<int> _Producto_Id;
		
		private EntityRef<Producto> _Producto;
		
		private EntityRef<FacturaCabecera> _FacturaCabecera;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCantidadChanging(System.Nullable<decimal> value);
    partial void OnCantidadChanged();
    partial void OnSubtotalChanging(System.Nullable<decimal> value);
    partial void OnSubtotalChanged();
    partial void OnFactura_IdChanging(System.Nullable<int> value);
    partial void OnFactura_IdChanged();
    partial void OnProducto_IdChanging(System.Nullable<int> value);
    partial void OnProducto_IdChanged();
    #endregion
		
		public FacturaDetalle()
		{
			this._Producto = default(EntityRef<Producto>);
			this._FacturaCabecera = default(EntityRef<FacturaCabecera>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this.OnSubtotalChanging(value);
					this.SendPropertyChanging();
					this._Subtotal = value;
					this.SendPropertyChanged("Subtotal");
					this.OnSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Factura_Id", DbType="Int")]
		public System.Nullable<int> Factura_Id
		{
			get
			{
				return this._Factura_Id;
			}
			set
			{
				if ((this._Factura_Id != value))
				{
					if (this._FacturaCabecera.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactura_IdChanging(value);
					this.SendPropertyChanging();
					this._Factura_Id = value;
					this.SendPropertyChanged("Factura_Id");
					this.OnFactura_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producto_Id", DbType="Int")]
		public System.Nullable<int> Producto_Id
		{
			get
			{
				return this._Producto_Id;
			}
			set
			{
				if ((this._Producto_Id != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProducto_IdChanging(value);
					this.SendPropertyChanging();
					this._Producto_Id = value;
					this.SendPropertyChanged("Producto_Id");
					this.OnProducto_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_FacturaDetalle", Storage="_Producto", ThisKey="Producto_Id", OtherKey="Id", IsForeignKey=true)]
		public Producto Producto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				Producto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.FacturaDetalle.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.FacturaDetalle.Add(this);
						this._Producto_Id = value.Id;
					}
					else
					{
						this._Producto_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Producto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacturaCabecera_FacturaDetalle", Storage="_FacturaCabecera", ThisKey="Factura_Id", OtherKey="Id", IsForeignKey=true)]
		public FacturaCabecera FacturaCabecera
		{
			get
			{
				return this._FacturaCabecera.Entity;
			}
			set
			{
				FacturaCabecera previousValue = this._FacturaCabecera.Entity;
				if (((previousValue != value) 
							|| (this._FacturaCabecera.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacturaCabecera.Entity = null;
						previousValue.FacturaDetalle.Remove(this);
					}
					this._FacturaCabecera.Entity = value;
					if ((value != null))
					{
						value.FacturaDetalle.Add(this);
						this._Factura_Id = value.Id;
					}
					else
					{
						this._Factura_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("FacturaCabecera");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class Producto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private System.Nullable<decimal> _Precio;
		
		private System.Nullable<decimal> _Stock;
		
		private System.Nullable<int> _Categoria_Id;
		
		private System.Data.Linq.Binary _Imagen;
		
		private EntitySet<FacturaDetalle> _FacturaDetalle;
		
		private EntityRef<Categoria> _Categoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnPrecioChanging(System.Nullable<decimal> value);
    partial void OnPrecioChanged();
    partial void OnStockChanging(System.Nullable<decimal> value);
    partial void OnStockChanged();
    partial void OnCategoria_IdChanging(System.Nullable<int> value);
    partial void OnCategoria_IdChanged();
    partial void OnImagenChanging(System.Data.Linq.Binary value);
    partial void OnImagenChanged();
    #endregion
		
		public Producto()
		{
			this._FacturaDetalle = new EntitySet<FacturaDetalle>(new Action<FacturaDetalle>(this.attach_FacturaDetalle), new Action<FacturaDetalle>(this.detach_FacturaDetalle));
			this._Categoria = default(EntityRef<Categoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria_Id", DbType="Int")]
		public System.Nullable<int> Categoria_Id
		{
			get
			{
				return this._Categoria_Id;
			}
			set
			{
				if ((this._Categoria_Id != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoria_IdChanging(value);
					this.SendPropertyChanging();
					this._Categoria_Id = value;
					this.SendPropertyChanged("Categoria_Id");
					this.OnCategoria_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imagen", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Imagen
		{
			get
			{
				return this._Imagen;
			}
			set
			{
				if ((this._Imagen != value))
				{
					this.OnImagenChanging(value);
					this.SendPropertyChanging();
					this._Imagen = value;
					this.SendPropertyChanged("Imagen");
					this.OnImagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_FacturaDetalle", Storage="_FacturaDetalle", ThisKey="Id", OtherKey="Producto_Id")]
		public EntitySet<FacturaDetalle> FacturaDetalle
		{
			get
			{
				return this._FacturaDetalle;
			}
			set
			{
				this._FacturaDetalle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Producto", Storage="_Categoria", ThisKey="Categoria_Id", OtherKey="Id", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Producto.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Producto.Add(this);
						this._Categoria_Id = value.Id;
					}
					else
					{
						this._Categoria_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacturaDetalle(FacturaDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Producto = this;
		}
		
		private void detach_FacturaDetalle(FacturaDetalle entity)
		{
			this.SendPropertyChanging();
			entity.Producto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vProductos")]
	public partial class vProductos
	{
		
		private int _Id;
		
		private string _NombreProducto;
		
		private System.Nullable<decimal> _Precio;
		
		private System.Nullable<decimal> _Stock;
		
		private System.Nullable<int> _Categoria_Id;
		
		private string _NombreCategoria;
		
		private System.Data.Linq.Binary _Imagen;
		
		public vProductos()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreProducto", DbType="NVarChar(50)")]
		public string NombreProducto
		{
			get
			{
				return this._NombreProducto;
			}
			set
			{
				if ((this._NombreProducto != value))
				{
					this._NombreProducto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this._Precio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this._Stock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria_Id", DbType="Int")]
		public System.Nullable<int> Categoria_Id
		{
			get
			{
				return this._Categoria_Id;
			}
			set
			{
				if ((this._Categoria_Id != value))
				{
					this._Categoria_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCategoria", DbType="NVarChar(50)")]
		public string NombreCategoria
		{
			get
			{
				return this._NombreCategoria;
			}
			set
			{
				if ((this._NombreCategoria != value))
				{
					this._NombreCategoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imagen", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Imagen
		{
			get
			{
				return this._Imagen;
			}
			set
			{
				if ((this._Imagen != value))
				{
					this._Imagen = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vFacturasDetalle")]
	public partial class vFacturasDetalle
	{
		
		private int _IdFacturaCabecera;
		
		private int _IdFacturaDetalle;
		
		private string _NombreProducto;
		
		private System.Nullable<decimal> _Cantidad;
		
		private System.Nullable<decimal> _Precio;
		
		private System.Nullable<decimal> _Subtotal;
		
		private string _NombreCategoria;
		
		private int _IdProducto;
		
		public vFacturasDetalle()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFacturaCabecera", DbType="Int NOT NULL")]
		public int IdFacturaCabecera
		{
			get
			{
				return this._IdFacturaCabecera;
			}
			set
			{
				if ((this._IdFacturaCabecera != value))
				{
					this._IdFacturaCabecera = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFacturaDetalle", DbType="Int NOT NULL")]
		public int IdFacturaDetalle
		{
			get
			{
				return this._IdFacturaDetalle;
			}
			set
			{
				if ((this._IdFacturaDetalle != value))
				{
					this._IdFacturaDetalle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreProducto", DbType="NVarChar(50)")]
		public string NombreProducto
		{
			get
			{
				return this._NombreProducto;
			}
			set
			{
				if ((this._NombreProducto != value))
				{
					this._NombreProducto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Decimal(5,0)")]
		public System.Nullable<decimal> Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this._Cantidad = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this._Precio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this._Subtotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreCategoria", DbType="NVarChar(50)")]
		public string NombreCategoria
		{
			get
			{
				return this._NombreCategoria;
			}
			set
			{
				if ((this._NombreCategoria != value))
				{
					this._NombreCategoria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProducto", DbType="Int NOT NULL")]
		public int IdProducto
		{
			get
			{
				return this._IdProducto;
			}
			set
			{
				if ((this._IdProducto != value))
				{
					this._IdProducto = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vFacturasCabecera")]
	public partial class vFacturasCabecera
	{
		
		private int _Id;
		
		private string _Cliente_Id;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<decimal> _Subtotal;
		
		private System.Nullable<decimal> _Iva;
		
		private System.Nullable<decimal> _Total;
		
		private string _Telefono;
		
		private string _Direccion;
		
		private System.Nullable<bool> _Anulado;
		
		private string _Nombre;
		
		private string _Apellido;
		
		public vFacturasCabecera()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cliente_Id", DbType="NVarChar(13)")]
		public string Cliente_Id
		{
			get
			{
				return this._Cliente_Id;
			}
			set
			{
				if ((this._Cliente_Id != value))
				{
					this._Cliente_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this._Fecha = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this._Subtotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Iva", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> Iva
		{
			get
			{
				return this._Iva;
			}
			set
			{
				if ((this._Iva != value))
				{
					this._Iva = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(10)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this._Telefono = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(50)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this._Direccion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anulado", DbType="Bit")]
		public System.Nullable<bool> Anulado
		{
			get
			{
				return this._Anulado;
			}
			set
			{
				if ((this._Anulado != value))
				{
					this._Anulado = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this._Nombre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(50)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this._Apellido = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Cedula;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Telefono;
		
		private string _Direccion;
		
		private string _Postal;
		
		private string _Correo;
		
		private EntitySet<FacturaCabecera> _FacturaCabecera;
		
		private EntityRef<LoginCliente> _LoginCliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnPostalChanging(string value);
    partial void OnPostalChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    #endregion
		
		public Cliente()
		{
			this._FacturaCabecera = new EntitySet<FacturaCabecera>(new Action<FacturaCabecera>(this.attach_FacturaCabecera), new Action<FacturaCabecera>(this.detach_FacturaCabecera));
			this._LoginCliente = default(EntityRef<LoginCliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="NVarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(50)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(10)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(50)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postal", DbType="NVarChar(5)")]
		public string Postal
		{
			get
			{
				return this._Postal;
			}
			set
			{
				if ((this._Postal != value))
				{
					this.OnPostalChanging(value);
					this.SendPropertyChanging();
					this._Postal = value;
					this.SendPropertyChanged("Postal");
					this.OnPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NVarChar(50)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_FacturaCabecera", Storage="_FacturaCabecera", ThisKey="Cedula", OtherKey="Cliente_Id")]
		public EntitySet<FacturaCabecera> FacturaCabecera
		{
			get
			{
				return this._FacturaCabecera;
			}
			set
			{
				this._FacturaCabecera.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_LoginCliente", Storage="_LoginCliente", ThisKey="Cedula", OtherKey="Usuario", IsUnique=true, IsForeignKey=false)]
		public LoginCliente LoginCliente
		{
			get
			{
				return this._LoginCliente.Entity;
			}
			set
			{
				LoginCliente previousValue = this._LoginCliente.Entity;
				if (((previousValue != value) 
							|| (this._LoginCliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoginCliente.Entity = null;
						previousValue.Cliente = null;
					}
					this._LoginCliente.Entity = value;
					if ((value != null))
					{
						value.Cliente = this;
					}
					this.SendPropertyChanged("LoginCliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacturaCabecera(FacturaCabecera entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_FacturaCabecera(FacturaCabecera entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Empleado")]
	public partial class Empleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Cedula;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private System.Nullable<bool> _Admin;
		
		private EntitySet<FacturaCabecera> _FacturaCabecera;
		
		private EntityRef<LoginEmpleado> _LoginEmpleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnAdminChanging(System.Nullable<bool> value);
    partial void OnAdminChanged();
    #endregion
		
		public Empleado()
		{
			this._FacturaCabecera = new EntitySet<FacturaCabecera>(new Action<FacturaCabecera>(this.attach_FacturaCabecera), new Action<FacturaCabecera>(this.detach_FacturaCabecera));
			this._LoginEmpleado = default(EntityRef<LoginEmpleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="NVarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(50)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Admin", DbType="Bit")]
		public System.Nullable<bool> Admin
		{
			get
			{
				return this._Admin;
			}
			set
			{
				if ((this._Admin != value))
				{
					this.OnAdminChanging(value);
					this.SendPropertyChanging();
					this._Admin = value;
					this.SendPropertyChanged("Admin");
					this.OnAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_FacturaCabecera", Storage="_FacturaCabecera", ThisKey="Cedula", OtherKey="Empleado_id")]
		public EntitySet<FacturaCabecera> FacturaCabecera
		{
			get
			{
				return this._FacturaCabecera;
			}
			set
			{
				this._FacturaCabecera.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_LoginEmpleado", Storage="_LoginEmpleado", ThisKey="Cedula", OtherKey="Usuario", IsUnique=true, IsForeignKey=false)]
		public LoginEmpleado LoginEmpleado
		{
			get
			{
				return this._LoginEmpleado.Entity;
			}
			set
			{
				LoginEmpleado previousValue = this._LoginEmpleado.Entity;
				if (((previousValue != value) 
							|| (this._LoginEmpleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoginEmpleado.Entity = null;
						previousValue.Empleado = null;
					}
					this._LoginEmpleado.Entity = value;
					if ((value != null))
					{
						value.Empleado = this;
					}
					this.SendPropertyChanged("LoginEmpleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacturaCabecera(FacturaCabecera entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = this;
		}
		
		private void detach_FacturaCabecera(FacturaCabecera entity)
		{
			this.SendPropertyChanging();
			entity.Empleado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacturaCabecera")]
	public partial class FacturaCabecera : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Cliente_Id;
		
		private string _Empleado_id;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<decimal> _Subtotal;
		
		private System.Nullable<decimal> _Iva;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<bool> _Anulado;
		
		private EntitySet<FacturaDetalle> _FacturaDetalle;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCliente_IdChanging(string value);
    partial void OnCliente_IdChanged();
    partial void OnEmpleado_idChanging(string value);
    partial void OnEmpleado_idChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnSubtotalChanging(System.Nullable<decimal> value);
    partial void OnSubtotalChanged();
    partial void OnIvaChanging(System.Nullable<decimal> value);
    partial void OnIvaChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnAnuladoChanging(System.Nullable<bool> value);
    partial void OnAnuladoChanged();
    #endregion
		
		public FacturaCabecera()
		{
			this._FacturaDetalle = new EntitySet<FacturaDetalle>(new Action<FacturaDetalle>(this.attach_FacturaDetalle), new Action<FacturaDetalle>(this.detach_FacturaDetalle));
			this._Cliente = default(EntityRef<Cliente>);
			this._Empleado = default(EntityRef<Empleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cliente_Id", DbType="NVarChar(13)")]
		public string Cliente_Id
		{
			get
			{
				return this._Cliente_Id;
			}
			set
			{
				if ((this._Cliente_Id != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCliente_IdChanging(value);
					this.SendPropertyChanging();
					this._Cliente_Id = value;
					this.SendPropertyChanged("Cliente_Id");
					this.OnCliente_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empleado_id", DbType="NVarChar(13)")]
		public string Empleado_id
		{
			get
			{
				return this._Empleado_id;
			}
			set
			{
				if ((this._Empleado_id != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmpleado_idChanging(value);
					this.SendPropertyChanging();
					this._Empleado_id = value;
					this.SendPropertyChanged("Empleado_id");
					this.OnEmpleado_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this.OnSubtotalChanging(value);
					this.SendPropertyChanging();
					this._Subtotal = value;
					this.SendPropertyChanged("Subtotal");
					this.OnSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Iva", DbType="Decimal(3,0)")]
		public System.Nullable<decimal> Iva
		{
			get
			{
				return this._Iva;
			}
			set
			{
				if ((this._Iva != value))
				{
					this.OnIvaChanging(value);
					this.SendPropertyChanging();
					this._Iva = value;
					this.SendPropertyChanged("Iva");
					this.OnIvaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anulado", DbType="Bit")]
		public System.Nullable<bool> Anulado
		{
			get
			{
				return this._Anulado;
			}
			set
			{
				if ((this._Anulado != value))
				{
					this.OnAnuladoChanging(value);
					this.SendPropertyChanging();
					this._Anulado = value;
					this.SendPropertyChanged("Anulado");
					this.OnAnuladoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacturaCabecera_FacturaDetalle", Storage="_FacturaDetalle", ThisKey="Id", OtherKey="Factura_Id")]
		public EntitySet<FacturaDetalle> FacturaDetalle
		{
			get
			{
				return this._FacturaDetalle;
			}
			set
			{
				this._FacturaDetalle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_FacturaCabecera", Storage="_Cliente", ThisKey="Cliente_Id", OtherKey="Cedula", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.FacturaCabecera.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.FacturaCabecera.Add(this);
						this._Cliente_Id = value.Cedula;
					}
					else
					{
						this._Cliente_Id = default(string);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_FacturaCabecera", Storage="_Empleado", ThisKey="Empleado_id", OtherKey="Cedula", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.FacturaCabecera.Remove(this);
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.FacturaCabecera.Add(this);
						this._Empleado_id = value.Cedula;
					}
					else
					{
						this._Empleado_id = default(string);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacturaDetalle(FacturaDetalle entity)
		{
			this.SendPropertyChanging();
			entity.FacturaCabecera = this;
		}
		
		private void detach_FacturaDetalle(FacturaDetalle entity)
		{
			this.SendPropertyChanging();
			entity.FacturaCabecera = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginEmpleado")]
	public partial class LoginEmpleado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Usuario;
		
		private string _Contraseña;
		
		private EntityRef<Empleado> _Empleado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    #endregion
		
		public LoginEmpleado()
		{
			this._Empleado = default(EntityRef<Empleado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="NVarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					if (this._Empleado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="NVarChar(50)")]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Empleado_LoginEmpleado", Storage="_Empleado", ThisKey="Usuario", OtherKey="Cedula", IsForeignKey=true)]
		public Empleado Empleado
		{
			get
			{
				return this._Empleado.Entity;
			}
			set
			{
				Empleado previousValue = this._Empleado.Entity;
				if (((previousValue != value) 
							|| (this._Empleado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Empleado.Entity = null;
						previousValue.LoginEmpleado = null;
					}
					this._Empleado.Entity = value;
					if ((value != null))
					{
						value.LoginEmpleado = this;
						this._Usuario = value.Cedula;
					}
					else
					{
						this._Usuario = default(string);
					}
					this.SendPropertyChanged("Empleado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginCliente")]
	public partial class LoginCliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Usuario;
		
		private string _Contraseña;
		
		private EntityRef<Cliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    #endregion
		
		public LoginCliente()
		{
			this._Cliente = default(EntityRef<Cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="NVarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="NVarChar(50)")]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_LoginCliente", Storage="_Cliente", ThisKey="Usuario", OtherKey="Cedula", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.LoginCliente = null;
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.LoginCliente = this;
						this._Usuario = value.Cedula;
					}
					else
					{
						this._Usuario = default(string);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
